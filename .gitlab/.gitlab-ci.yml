stages:
  - format-lint
  - test
  - pypi
  - build
  - deploy

.before_script_template: &before_script_template
  before_script: 
    - echo $NAME
    - python -m pip install --upgrade pip
    - pip install .[test]
    - python -V

format:
  <<: *before_script_template
  image: python:latest
  stage: format-lint
  script:
    - ruff check --no-fix
    - ruff format --diff

.test_job_template: &test_job_template
  <<: *before_script_template
  stage: test
  image: "python:$VERSION"
  parallel:
    matrix:
      - VERSION: ['3.11', '3.12']

Run unittests:
  <<: *test_job_template
  script:
    - python -m coverage run --source=. -m unittest discover tests/
    - coverage report -m
    - coverage xml
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml

Publish:
  <<: *before_script_template
  stage: pypi
  when: on_success
  image: python:latest
  script:
    - pip install .[dist]
    - python -m build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

Rebuild Image: 
  stage: build
  image: docker
  variables:
    DOCKER_TAG: $CI_COMMIT_REF_NAME
  services:
    - docker:dind
  script:
    - echo $NAME
    - docker build -t snowsignal snowsignal
    - docker login https://harbor.stfc.ac.uk -u $DOCKER_REG_NAME --password $DOCKER_REG_TOKEN
    - echo Build Identifiers - ${NAME}:$DOCKER_TAG
    - docker build -t harbor.stfc.ac.uk/isis-accelerator-controls/snowsignal:$DOCKER_TAG snowsignal
    - docker push harbor.stfc.ac.uk/isis-accelerator-controls/snowsignal:$DOCKER_TAG

Deploy Development Image:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
      when: on_success
  image: docker
  script: 
    - apk add curl
    - curl -X POST $PORTAINER_WEBHOOK_DEV

Deploy Production Image:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
  image: docker
  script: 
    - apk add curl
    - curl -X POST $PORTAINER_WEBHOOK_PROD