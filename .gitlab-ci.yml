stages:
  - test
  - build
  - deploy

Run unittests:
  stage: test
  image: python:latest
  script:
    - python --version
    - pip install -r src/requirements.txt
    - pip install -r test/requirements.txt
    - python -m coverage run --source=. -m unittest discover
    - coverage report
    - coverage xml
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml

Rebuild Image: 
  stage: build
  when: on_success
  image: docker
  variables:
    DOCKER_TAG: $CI_COMMIT_REF_NAME
  services:
    - docker:dind
  script:
    - echo $NAME
    - docker build -t snowsignal src
    - docker login https://harbor.stfc.ac.uk -u $DOCKER_REG_NAME --password $DOCKER_REG_TOKEN
    - echo Build Identifiers - ${NAME}:$DOCKER_TAG
    - docker build -t harbor.stfc.ac.uk/isis-accelerator-controls/snowsignal:$DOCKER_TAG src
    - docker push harbor.stfc.ac.uk/isis-accelerator-controls/snowsignal:$DOCKER_TAG

Deploy Image:
  stage: deploy
  when: on_success
  script: 
    - apk add curl
    - curl -X POST $WEBHOOK_APP
