stages:
  - format-lint
  - test
  - build
  - deploy

.before_script_template: &before_script_template
  before_script: 
    - echo $NAME
    - python -m pip install --upgrade pip
    - pip install .[test]
    - python -V

format:
  <<: *before_script_template
  image: python:latest
  stage: format-lint
  script:
    - black ./snowsignal

lint:
  <<: *before_script_template
  image: python:latest
  stage: format-lint
  script:
    - flake8 ./snowsignal

.test_job_template: &test_job_template
  <<: *before_script_template
  stage: test
  image: "python:$VERSION"
  parallel:
    matrix:
      - VERSION: ['3.8', '3.9', '3.10', '3.11', '3.12']

Older verisons unittests (Optional):
  <<: *test_job_template
  script:
    - python -m coverage run --source=. -m unittest discover tests/
    - coverage report -m
    - coverage xml
  rules:
    - allow_failure: true # Only the later tests must succeed
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml

Run unittests:
  <<: *before_script_template
  image: python:latest
  stage: test
  script:
    - python -m coverage run --source=. -m unittest discover tests/
    - coverage report -m
    - coverage xml
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml

Rebuild Image: 
  stage: build
  when: on_success
  image: docker
  variables:
    DOCKER_TAG: $CI_COMMIT_REF_NAME
  services:
    - docker:dind
  script:
    - echo $NAME
    - docker build -t snowsignal snowsignal
    - docker login https://harbor.stfc.ac.uk -u $DOCKER_REG_NAME --password $DOCKER_REG_TOKEN
    - echo Build Identifiers - ${NAME}:$DOCKER_TAG
    - docker build -t harbor.stfc.ac.uk/isis-accelerator-controls/snowsignal:$DOCKER_TAG snowsignal
    - docker push harbor.stfc.ac.uk/isis-accelerator-controls/snowsignal:$DOCKER_TAG

Deploy Image:
  stage: deploy
  when: on_success
  image: docker
  script: 
    - apk add curl
    - curl -X POST $WEBHOOK_APP
